Index: src/components/commonComponents/index.ts
===================================================================
diff --git a/src/components/commonComponents/index.ts b/src/components/commonComponents/index.ts
deleted file mode 100644
--- a/src/components/commonComponents/index.ts	(revision e5904d69ae69bd5e998f20c692a81fbbc21e12b9)
+++ /dev/null	(revision e5904d69ae69bd5e998f20c692a81fbbc21e12b9)
@@ -1,22 +0,0 @@
-import styled from 'styled-components';
-
-const Container = styled.div`
-    width: 100%;
-    padding: 0 60px;
-    margin: 0 auto;
-    display: flex;
-    flex-wrap: wrap;
-    align-items: center;
-`;
-
-const Card = styled.div`
-    width: 20%;
-    margin-right: 60px;
-    display: block;
-    padding: 20px;
-    img {
-        max-width: 100%;
-    }
-`;
-
-export { Container, Card };
\ No newline at end of file
Index: src/components/common/Header.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/common/Header.tsx b/src/components/common/Header.tsx
--- a/src/components/common/Header.tsx	(revision e5904d69ae69bd5e998f20c692a81fbbc21e12b9)
+++ b/src/components/common/Header.tsx	(date 1654331586785)
@@ -3,7 +3,7 @@
 
 import styled from 'styled-components';
 
-import { Container } from "../commonComponents";
+import { Container } from "../common/styles/index";
 
 const HeaderInner = styled.div`
     background: #190a55;
Index: src/components/common/styles/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/common/styles/index.tsx b/src/components/common/styles/index.tsx
--- a/src/components/common/styles/index.tsx	(revision e5904d69ae69bd5e998f20c692a81fbbc21e12b9)
+++ b/src/components/common/styles/index.tsx	(date 1654331586781)
@@ -1,0 +1,22 @@
+import styled from 'styled-components';
+
+const Container = styled.div`
+    width: 100%;
+    padding: 0 60px;
+    margin: 0 auto;
+    display: flex;
+    flex-wrap: wrap;
+    align-items: center;
+`;
+
+const CardContainer = styled.div`
+    width: 20%;
+    margin-right: 60px;
+    display: block;
+    padding: 20px;
+    img {
+        max-width: 100%;
+    }
+`;
+
+export { Container, CardContainer };
\ No newline at end of file
Index: src/store/reducer/MarketReducer.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/store/reducer/MarketReducer.ts b/src/store/reducer/MarketReducer.ts
--- a/src/store/reducer/MarketReducer.ts	(revision e5904d69ae69bd5e998f20c692a81fbbc21e12b9)
+++ b/src/store/reducer/MarketReducer.ts	(date 1654330848634)
@@ -1,22 +1,30 @@
-import { GET_MARKET, SET_LOADING } from '../actions/ActionTypes'
+import { GET_MARKET_SUCCESS, GET_MARKET_PENDING, GET_MARKET_ERROR } from '../actions/ActionTypes'
 
 const initialState = {
   market: null,
-  isLoading: false
+  loading: false,
+  error: null
 };
 
 export default function MarketReducer(state = initialState, action: any) {
   switch (action.type) {
-    case GET_MARKET:
+    case GET_MARKET_SUCCESS:
+      return {
+        ...state,
+        market: action.payload.assets,
+        loading: false
+      };
+    case GET_MARKET_PENDING:
       return {
         ...state,
-        market: action.payload,
+        loading: true,
       };
-    case SET_LOADING:
+    case GET_MARKET_ERROR:
       return {
         ...state,
-        isLoading: action.payload,
-      };
+        error: action.payload,
+        loading: false
+      }
     default:
       return state;
   }
Index: src/store/actions/actions.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/store/actions/actions.ts b/src/store/actions/actions.ts
--- a/src/store/actions/actions.ts	(revision e5904d69ae69bd5e998f20c692a81fbbc21e12b9)
+++ b/src/store/actions/actions.ts	(date 1654330848642)
@@ -1,17 +1,32 @@
-import axios from 'axios';
-import { GET_MARKET, SET_LOADING } from './ActionTypes';
+import axios, { AxiosResponse } from 'axios';
+import { GET_MARKET_SUCCESS, GET_MARKET_PENDING, GET_MARKET_ERROR } from './ActionTypes';
+
+const getMarketAPI = 'https://testnets-api.opensea.io/assets?asset_contract_address=0x5A027A1F234a9499a8eAf308a9d318794633d2A8&order_direction=asc'
 
-export const getAssets = (payload: any) => ({type: GET_MARKET, payload})
-export const setLoading = (payload: any) => ({type: SET_LOADING, payload})
+export type AsyncTypes = {
+  pending: string;
+  complete: string;
+  error: string;
+}
 
-export const getMarket = () => {
-  return (dispatch: any) => {
-    dispatch(setLoading(true))
-    const fetchNFTData = async () => {
-      const openseaData = await axios.get('https://testnets-api.opensea.io/assets?asset_contract_address=0x5A027A1F234a9499a8eAf308a9d318794633d2A8&order_direction=asc');
-      dispatch(getAssets(openseaData.data.assets))
-      dispatch(setLoading(false))
-    }    
-    return fetchNFTData();
-  };
-};
\ No newline at end of file
+const asyncActionCreator = (asyncTypes: AsyncTypes, promise: Promise<any>) => (...args: any[]) => {
+  return (dispatch: (arg0: any) => Promise<any>) => {
+    dispatch({ type: asyncTypes.pending })
+    return promise
+        .then((payload: any) => dispatch({
+          type: asyncTypes.complete,
+          payload: payload.data,
+        }))
+        .catch((err: string) => dispatch({
+          type: asyncTypes.error,
+          error: true,
+          payload: err,
+        }))
+  }
+}
+
+export const getMarket = asyncActionCreator({
+  pending: GET_MARKET_PENDING,
+  complete: GET_MARKET_SUCCESS,
+  error: GET_MARKET_ERROR
+}, axios.get(getMarketAPI))
Index: src/components/homepage/Homepage.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/homepage/Homepage.tsx b/src/components/homepage/Homepage.tsx
--- a/src/components/homepage/Homepage.tsx	(revision e5904d69ae69bd5e998f20c692a81fbbc21e12b9)
+++ b/src/components/homepage/Homepage.tsx	(date 1654332700036)
@@ -1,31 +1,19 @@
 import { useEffect } from 'react';
 import { useSelector, useDispatch } from "react-redux";
+import { Card } from '../common/Card';
 
-import { Container, Card } from "../commonComponents";
+import { Container } from "../common/styles/index";
 
 export interface HomeProps {} const HomePage = (props:HomeProps) => {
-    const data:any = useSelector((state) => state);
-
-    let nftCards = '';
-
-    const loadedStatus = data.isLoading;
-
-    if (loadedStatus === false && data.market != null) {  
-      nftCards = data.market.map((nftCard:any) => {
-        return (
-          <Card>
-            <img src={nftCard.image_url} alt="" />
-            <span>ID {nftCard.id}</span>
-          </Card>
-        );
-      });
-    }
-
+    const {loading, market} :any = useSelector((state) => state);
+    
     return (
       <div>
         <h2>HomePage</h2>
         <Container>
-          {nftCards}
+          {!loading && market !== null ? market.map(({id, image_url}) => (
+                  <Card id={id} src={image_url}/>
+              )) : 'Loading... ' }
         </Container>
       </div>
     );
Index: tsconfig.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tsconfig.json b/tsconfig.json
--- a/tsconfig.json	(revision e5904d69ae69bd5e998f20c692a81fbbc21e12b9)
+++ b/tsconfig.json	(date 1654330899048)
@@ -10,7 +10,7 @@
     "skipLibCheck": true,
     "esModuleInterop": true,
     "allowSyntheticDefaultImports": true,
-    "strict": true,
+    "strict": false,
     "forceConsistentCasingInFileNames": true,
     "noFallthroughCasesInSwitch": true,
     "module": "esnext",
Index: src/components/catalog/Catalog.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/catalog/Catalog.tsx b/src/components/catalog/Catalog.tsx
--- a/src/components/catalog/Catalog.tsx	(revision e5904d69ae69bd5e998f20c692a81fbbc21e12b9)
+++ b/src/components/catalog/Catalog.tsx	(date 1654331586799)
@@ -1,4 +1,4 @@
-import { Container } from "../commonComponents"
+import { Container } from "../common/styles/index"
 
 const Catalog = () => {
     return (
Index: src/store/actions/ActionTypes.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/store/actions/ActionTypes.ts b/src/store/actions/ActionTypes.ts
--- a/src/store/actions/ActionTypes.ts	(revision e5904d69ae69bd5e998f20c692a81fbbc21e12b9)
+++ b/src/store/actions/ActionTypes.ts	(date 1654330848647)
@@ -1,2 +1,3 @@
-export const GET_MARKET = 'GET_MARKET';
-export const SET_LOADING = 'SET_LOADING';
\ No newline at end of file
+export const GET_MARKET_SUCCESS = 'GET_MARKET_SUCCESS';
+export const GET_MARKET_PENDING = 'GET_MARKET_PENDING';
+export const GET_MARKET_ERROR = 'GET_MARKET_ERROR';
\ No newline at end of file
Index: src/components/common/common.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/common/common.tsx b/src/components/common/Card.tsx
rename from src/components/common/common.tsx
rename to src/components/common/Card.tsx
--- a/src/components/common/common.tsx	(revision e5904d69ae69bd5e998f20c692a81fbbc21e12b9)
+++ b/src/components/common/Card.tsx	(date 1654331586787)
@@ -1,0 +1,8 @@
+import { CardContainer } from "./styles";
+
+export const Card = ({id, src}) => (
+    <CardContainer key={id}>
+        <img src={src} alt="" />
+        <span>ID {id}</span>
+    </CardContainer>
+)
\ No newline at end of file
